#!/bin/bash
# vim: filetype=sh

# If you want formatting set this variable to true
do_autoformat=$(git config hooks.autoformat)

# Redirect output to stderr.
exec 1>&2

if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

AUTOFORMAT=autoformat
FALLBACK_AUTOFORMAT="%s"

hash $AUTOFORMAT >/dev/null 2>/dev/null
if [[ $? -ne 0 ]]; then
    type $FALLBACK_AUTOFORMAT >/dev/null 2>/dev/null
    if [[ $? -ne 0 ]]; then
        echo "No autoform binary in \$PATH"
        exit 0
    else
        AUTOFORMAT="$FALLBACK_AUTOFORMAT"
        echo "No autoformat in \$PATH, using fallback $AUTOFORMAT"
    fi
fi

if [[ "$do_autoformat" = "auto" ]]; then
    git diff --cached --name-only --diff-filter=AM $against | $AUTOFORMAT --no-backup --stdin
elif [[ "$do_autoformat" = "interrupt" ]]; then
    git diff --cached --name-only --diff-filter=AM $against | $AUTOFORMAT --no-backup --stdin --dry-run
    if [[ $? -ne 0 ]]; then
        echo "Commit interrupted because unformatted files found"
        exit 1
    fi
fi

exit 0

